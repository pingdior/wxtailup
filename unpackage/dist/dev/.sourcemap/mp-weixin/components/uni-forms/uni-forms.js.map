{"version":3,"sources":["webpack:////Users/chenping/7 kalastar/tailup/uniapp/components/uni-forms/uni-forms.vue?323d","webpack:////Users/chenping/7 kalastar/tailup/uniapp/components/uni-forms/uni-forms.vue?30f9","webpack:////Users/chenping/7 kalastar/tailup/uniapp/components/uni-forms/uni-forms.vue?1d84","webpack:////Users/chenping/7 kalastar/tailup/uniapp/components/uni-forms/uni-forms.vue?0df0","uni-app:///components/uni-forms/uni-forms.vue"],"names":[],"mappings":"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","file":"components/uni-forms/uni-forms.js","sourcesContent":["import { render, staticRenderFns, recyclableRender, components } from \"./uni-forms.vue?vue&type=template&id=ae0a3a2c&scoped=true&\"\nvar renderjs\nimport script from \"./uni-forms.vue?vue&type=script&lang=js&\"\nexport * from \"./uni-forms.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ae0a3a2c\",\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"components/uni-forms/uni-forms.vue\"\nexport default component.exports","export * from \"-!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--16-0!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./uni-forms.vue?vue&type=template&id=ae0a3a2c&scoped=true&\"","var components\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./uni-forms.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./uni-forms.vue?vue&type=script&lang=js&\"","<template>\n\t<!--   -->\n\t<view class=\"uni-forms\" :class=\"{'uni-forms--top':!border}\">\n\t\t<form @submit.stop=\"submitForm\" @reset=\"resetForm\">\n\t\t\t<slot></slot>\n\t\t</form>\n\t</view>\n</template>\n\n<script>\n\timport Vue from 'vue'\n\timport Validator from './validate.js'\n\tVue.prototype.binddata = function(name, value, formName) {\n\t\tif (formName) {\n\t\t\tthis.$refs[formName].setValue(name, value)\n\t\t} else {\n\t\t\tlet formVm\n\t\t\tfor (let i in this.$refs) {\n\t\t\t\tconst vm = this.$refs[i]\n\t\t\t\tif (vm && vm.$options && vm.$options.name === 'uniForms') {\n\t\t\t\t\tformVm = vm\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!formVm) return console.error('当前 uni-froms 组件缺少 ref 属性')\n\t\t\tformVm.setValue(name, value)\n\t\t}\n\t}\n\n\t/**\n\t * Forms 表单\n\t * @description 由输入框、选择器、单选框、多选框等控件组成，用以收集、校验、提交数据\n\t * @tutorial https://ext.dcloud.net.cn/plugin?id=2773\n\t * @property {Object} rules\t表单校验规则\n\t * @property {String} validateTrigger = [bind|submit]\t校验触发器方式 默认 submit 可选\n\t * @value bind \t\t发生变化时触发\n\t * @value submit \t提交时触发\n\t * @property {String} labelPosition = [top|left]\tlabel 位置 默认 left 可选\n\t * @value top\t\t顶部显示 label\n\t * @value left\t左侧显示 label\n\t * @property {String} labelWidth\tlabel 宽度，默认 65px\n\t * @property {String} labelAlign = [left|center|right]\tlabel 居中方式  默认 left 可选\n\t * @value left\t\tlabel 左侧显示\n\t * @value center\tlabel 居中\n\t * @value right\t\tlabel 右侧对齐\n\t * @property {String} errShowType = [undertext|toast|modal]\t校验错误信息提示方式\n\t * @value undertext\t错误信息在底部显示\n\t * @value toast\t错误信息toast显示\n\t * @value modal\t错误信息modal显示\n\t * @event {Function} submit 提交时触发\n\t */\n\n\texport default {\n\t\tname: 'uniForms',\n\t\tprops: {\n\t\t\tvalue: {\n\t\t\t\ttype: Object,\n\t\t\t\tdefault () {\n\t\t\t\t\treturn {}\n\t\t\t\t}\n\t\t\t},\n\t\t\t// 表单校验规则\n\t\t\trules: {\n\t\t\t\ttype: Object,\n\t\t\t\tdefault () {\n\t\t\t\t\treturn {}\n\t\t\t\t}\n\t\t\t},\n\t\t\t// 校验触发器方式，默认 关闭\n\t\t\tvalidateTrigger: {\n\t\t\t\ttype: String,\n\t\t\t\tdefault: ''\n\t\t\t},\n\t\t\t// label 位置，可选值 top/left\n\t\t\tlabelPosition: {\n\t\t\t\ttype: String,\n\t\t\t\tdefault: 'left'\n\t\t\t},\n\t\t\t// label 宽度，单位 px\n\t\t\tlabelWidth: {\n\t\t\t\ttype: [String, Number],\n\t\t\t\tdefault: 65\n\t\t\t},\n\t\t\t// label 居中方式，可选值 left/center/right\n\t\t\tlabelAlign: {\n\t\t\t\ttype: String,\n\t\t\t\tdefault: 'left'\n\t\t\t},\n\t\t\terrShowType: {\n\t\t\t\ttype: String,\n\t\t\t\tdefault: 'undertext'\n\t\t\t},\n\t\t\tborder: {\n\t\t\t\ttype: Boolean,\n\t\t\t\tdefault: false\n\t\t\t}\n\t\t},\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tformData: {}\n\t\t\t};\n\t\t},\n\t\twatch: {\n\t\t\trules(newVal) {\n\t\t\t\tthis.init(newVal)\n\t\t\t},\n\t\t\ttrigger(trigger) {\n\t\t\t\tthis.formTrigger = trigger\n\t\t\t},\n\t\t},\n\t\tcreated() {\n\t\t\tlet _this = this\n\t\t\tthis.childrens = []\n\t\t\tthis.inputChildrens = []\n\t\t\tthis.checkboxChildrens = []\n\t\t\tthis.formRules = []\n\t\t\t// this.init(this.rules)\n\t\t},\n\t\tmounted() {\n\t\t\tthis.init(this.rules)\n\t\t},\n\t\tmethods: {\n\t\t\tinit(formRules) {\n\t\t\t\t// 判断是否有规则\n\t\t\t\tif (Object.keys(formRules).length > 0) {\n\t\t\t\t\tthis.formTrigger = this.trigger\n\t\t\t\t\tthis.formRules = formRules\n\t\t\t\t\t// if (!this.validator) {\n\t\t\t\t\tthis.validator = new Validator(formRules)\n\t\t\t\t\t// }\n\t\t\t\t} else {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\t// 判断表单存在那些实例\n\t\t\t\tfor (let i in this.value) {\n\t\t\t\t\tconst itemData = this.childrens.find(v => v.name === i)\n\t\t\t\t\tif (itemData) {\n\t\t\t\t\t\tthis.formData[i] = this.value[i]\n\t\t\t\t\t\titemData.init()\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// watch 每个属性 ，需要知道具体那个属性发变化\n\t\t\t\tObject.keys(this.value).forEach((key) => {\n\t\t\t\t\tthis.$watch('value.' + key, (newVal) => {\n\t\t\t\t\t\tconst itemData = this.childrens.find(v => v.name === key)\n\t\t\t\t\t\tif (itemData) {\n\t\t\t\t\t\t\tthis.formData[key] = this._getValue(key, newVal)\n\t\t\t\t\t\t\titemData.init()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.formData[key] = this.value[key] || null\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t},\n\t\t\t/**\n\t\t\t * 设置校验规则\n\t\t\t * @param {Object} formRules\n\t\t\t */\n\t\t\tsetRules(formRules) {\n\t\t\t\tthis.init(formRules)\n\t\t\t},\n\t\t\t/**\n\t\t\t * 公开给用户使用\n\t\t\t * 设置自定义表单组件 value 值\n\t\t\t *  @param {String} name 字段名称\n\t\t\t *  @param {String} value 字段值\n\t\t\t */\n\t\t\tsetValue(name, value, callback) {\n\t\t\t\tlet example = this.childrens.find(child => child.name === name)\n\t\t\t\tif (!example) return null\n\t\t\t\tvalue = this._getValue(example.name, value)\n\t\t\t\tthis.formData[name] = value\n\t\t\t\texample.val = value\n\t\t\t\tthis.$emit('input', Object.assign({}, this.value, this.formData))\n\t\t\t\treturn example.triggerCheck(value, callback)\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * TODO 表单提交， 小程序暂不支持这种用法\n\t\t\t * @param {Object} event\n\t\t\t */\n\t\t\tsubmitForm(event) {\n\t\t\t\tconst value = event.detail.value\n\t\t\t\treturn this.validateAll(value || this.formData, 'submit')\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 表单重置\n\t\t\t * @param {Object} event\n\t\t\t */\n\t\t\tresetForm(event) {\n\t\t\t\tthis.childrens.forEach(item => {\n\t\t\t\t\titem.errMsg = ''\n\t\t\t\t\tconst inputComp = this.inputChildrens.find(child => child.rename === item.name)\n\t\t\t\t\tif (inputComp) {\n\t\t\t\t\t\tinputComp.errMsg = ''\n\t\t\t\t\t\tinputComp.$emit('input', inputComp.multiple ? [] : '')\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tthis.childrens.forEach((item) => {\n\t\t\t\t\tif (item.name) {\n\t\t\t\t\t\tthis.formData[item.name] = this._getValue(item.name, '')\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tthis.$emit('input', this.formData)\n\t\t\t\tthis.$emit('reset', event)\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 触发表单校验，通过 @validate 获取\n\t\t\t * @param {Object} validate\n\t\t\t */\n\t\t\tvalidateCheck(validate) {\n\t\t\t\tif (validate === null) validate = null\n\t\t\t\tthis.$emit('validate', validate)\n\t\t\t},\n\t\t\t/**\n\t\t\t * 校验所有或者部分表单\n\t\t\t */\n\t\t\tasync validateAll(invalidFields, type, callback) {\n\t\t\t\tthis.childrens.forEach(item => {\n\t\t\t\t\titem.errMsg = ''\n\t\t\t\t})\n\n\t\t\t\tlet promise;\n\t\t\t\tif (!callback && typeof callback !== 'function' && Promise) {\n\t\t\t\t\tpromise = new Promise((resolve, reject) => {\n\t\t\t\t\t\tcallback = function(valid, invalidFields) {\n\t\t\t\t\t\t\t!valid ? resolve(invalidFields) : reject(valid);\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tlet fieldsValue = {}\n\t\t\t\tlet tempInvalidFields = Object.assign({}, invalidFields)\n\n\t\t\t\tObject.keys(this.formRules).forEach(item => {\n\t\t\t\t\tconst values = this.formRules[item]\n\t\t\t\t\tconst rules = (values && values.rules) || []\n\t\t\t\t\tlet isNoField = false\n\t\t\t\t\tfor (let i = 0; i < rules.length; i++) {\n\t\t\t\t\t\tconst rule = rules[i]\n\t\t\t\t\t\tif (rule.required) {\n\t\t\t\t\t\t\tisNoField = true\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// 如果存在 required 才会将内容插入校验对象\n\t\t\t\t\tif (!isNoField &&\n\t\t\t\t\t\t((tempInvalidFields[item] === undefined ||\n\t\t\t\t\t\t\t\ttempInvalidFields[item] === '') &&\n\t\t\t\t\t\t\ttempInvalidFields[item] !== false\n\t\t\t\t\t\t)) {\n\t\t\t\t\t\tdelete tempInvalidFields[item]\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t// 循环字段是否存在于校验规则中\n\t\t\t\tfor (let i in this.formRules) {\n\t\t\t\t\tfor (let j in tempInvalidFields) {\n\t\t\t\t\t\tconst index = this.childrens.findIndex(v => v.name === j)\n\t\t\t\t\t\tif (i === j && index !== -1) {\n\t\t\t\t\t\t\tfieldsValue[i] = tempInvalidFields[i]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet result = []\n\t\t\t\tlet example = null\n\n\t\t\t\tlet newFormData = {}\n\t\t\t\tthis.childrens.forEach(v => {\n\t\t\t\t\tnewFormData[v.name] = this._getValue(v.name, invalidFields[v.name])\n\t\t\t\t})\n\t\t\t\tif (this.validator) {\n\t\t\t\t\tfor (let i in fieldsValue) {\n\t\t\t\t\t\t// 循环校验，目的是异步校验\n\t\t\t\t\t\tconst resultData = await this.validator.validateUpdate({\n\t\t\t\t\t\t\t[i]: fieldsValue[i]\n\t\t\t\t\t\t}, this.formData)\n\n\t\t\t\t\t\t// 未通过\n\t\t\t\t\t\tif (resultData) {\n\t\t\t\t\t\t\t// 获取当前未通过子组件实例\n\t\t\t\t\t\t\texample = this.childrens.find(child => child.name === resultData.key)\n\t\t\t\t\t\t\t// 获取easyInput 组件实例\n\t\t\t\t\t\t\tconst inputComp = this.inputChildrens.find(child => child.rename === (example && example\n\t\t\t\t\t\t\t\t.name))\n\t\t\t\t\t\t\tif (inputComp) {\n\t\t\t\t\t\t\t\tinputComp.errMsg = resultData.errorMessage\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tresult.push(resultData)\n\t\t\t\t\t\t\t// 区分触发类型\n\t\t\t\t\t\t\tif (this.errShowType === 'undertext') {\n\t\t\t\t\t\t\t\tif (example) example.errMsg = resultData.errorMessage\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (this.errShowType === 'toast') {\n\t\t\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\t\t\ttitle: resultData.errorMessage || '校验错误',\n\t\t\t\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t} else if (this.errShowType === 'modal') {\n\t\t\t\t\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\t\t\t\t\ttitle: '提示',\n\t\t\t\t\t\t\t\t\t\tcontent: resultData.errorMessage || '校验错误'\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tif (example) example.errMsg = resultData.errorMessage\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (Array.isArray(result)) {\n\t\t\t\t\tif (result.length === 0) result = null\n\t\t\t\t}\n\n\t\t\t\tif (type === 'submit') {\n\t\t\t\t\tthis.$emit('submit', {\n\t\t\t\t\t\tdetail: {\n\t\t\t\t\t\t\tvalue: newFormData,\n\t\t\t\t\t\t\terrors: result\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tthis.$emit('validate', result)\n\t\t\t\t}\n\n\t\t\t\tcallback && typeof callback === 'function' && callback(result, newFormData)\n\n\t\t\t\tif (promise && callback) {\n\t\t\t\t\treturn promise\n\t\t\t\t} else {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 外部调用方法\n\t\t\t * 手动提交校验表单\n\t\t\t * 对整个表单进行校验的方法，参数为一个回调函数。\n\t\t\t */\n\t\t\tsubmit(callback) {\n\t\t\t\t// Object.assign(this.formData,formData)\n\t\t\t\tfor (let i in this.value) {\n\t\t\t\t\tconst itemData = this.childrens.find(v => v.name === i)\n\t\t\t\t\tif (itemData) {\n\t\t\t\t\t\tif (this.formData[i] === undefined) {\n\t\t\t\t\t\t\tthis.formData[i] = this._getValue(i, this.value[i])\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this.validateAll(this.formData, 'submit', callback)\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 外部调用方法\n\t\t\t * 校验表单\n\t\t\t * 对整个表单进行校验的方法，参数为一个回调函数。\n\t\t\t */\n\t\t\tvalidate(callback) {\n\t\t\t\treturn this.validateAll(this.formData, '', callback)\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 部分表单校验\n\t\t\t * @param {Object} props\n\t\t\t * @param {Object} cb\n\t\t\t */\n\t\t\tvalidateField(props, callback) {\n\t\t\t\tprops = [].concat(props);\n\t\t\t\tlet invalidFields = {}\n\t\t\t\tthis.childrens.forEach(item => {\n\t\t\t\t\tif (props.indexOf(item.name) !== -1) {\n\t\t\t\t\t\tinvalidFields = Object.assign({}, invalidFields, {\n\t\t\t\t\t\t\t[item.name]: this.formData[item.name]\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\treturn this.validateAll(invalidFields, '', callback)\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 对整个表单进行重置，将所有字段值重置为初始值并移除校验结果\n\t\t\t */\n\t\t\tresetFields() {\n\t\t\t\tthis.resetForm()\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 移除表单项的校验结果。传入待移除的表单项的 prop 属性或者 prop 组成的数组，如不传则移除整个表单的校验结果\n\t\t\t */\n\t\t\tclearValidate(props) {\n\t\t\t\tprops = [].concat(props);\n\t\t\t\tthis.childrens.forEach(item => {\n\t\t\t\t\tconst inputComp = this.inputChildrens.find(child => child.rename === item.name)\n\t\t\t\t\tif (props.length === 0) {\n\t\t\t\t\t\titem.errMsg = ''\n\t\t\t\t\t\tif (inputComp) {\n\t\t\t\t\t\t\tinputComp.errMsg = ''\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (props.indexOf(item.name) !== -1) {\n\t\t\t\t\t\t\titem.errMsg = ''\n\t\t\t\t\t\t\tif (inputComp) {\n\t\t\t\t\t\t\t\tinputComp.errMsg = ''\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\t/**\n\t\t\t * 把 value 转换成指定的类型\n\t\t\t * @param {Object} key\n\t\t\t * @param {Object} value\n\t\t\t */\n\t\t\t_getValue(key, value) {\n\t\t\t\tconst rules = (this.formRules[key] && this.formRules[key].rules) || []\n\t\t\t\tconst isRuleNum = rules.find(val => val.format && this.type_filter(val.format))\n\t\t\t\tconst isRuleBool = rules.find(val => val.format && val.format === 'boolean' || val.format === 'bool')\n\t\t\t\t// 输入值为 number\n\t\t\t\tif (isRuleNum) {\n\t\t\t\t\tvalue = isNaN(value) ? value : (value === '' || value === null ? null : Number(value))\n\t\t\t\t}\n\t\t\t\t// 简单判断真假值\n\t\t\t\tif (isRuleBool) {\n\t\t\t\t\tvalue = !value ? false : true\n\t\t\t\t}\n\t\t\t\treturn value\n\t\t\t},\n\t\t\t/**\n\t\t\t * 过滤数字类型\n\t\t\t * @param {Object} format\n\t\t\t */\n\t\t\ttype_filter(format) {\n\t\t\t\treturn format === 'int' || format === 'double' || format === 'number' || format === 'timestamp'\n\t\t\t}\n\t\t}\n\t}\n</script>\n\n<style scoped></style>"],"sourceRoot":""}